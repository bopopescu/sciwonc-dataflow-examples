#!/bin/bash

set -e

#TOPDIR=`pwd`
ABSOLUTE_FILEPATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"
TOPDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd $TOPDIR

# generate the dax
export PYTHONPATH=`pegasus-config --python`
$TOPDIR/dax-generator-2.py >$TOPDIR/dax.xml


# create the site catalog
cat >$TOPDIR/sites.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<sitecatalog xmlns="http://pegasus.isi.edu/schema/sitecatalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/sitecatalog http://pegasus.isi.edu/schema/sc-4.0.xsd" version="4.0">

    <site  handle="local" arch="x86_64" os="LINUX">
        <directory type="shared-scratch" path="$TOPDIR/work">
            <file-server operation="all" url="file://$TOPDIR/work"/>
        </directory>
        <directory type="local-storage" path="$TOPDIR/outputs">
            <file-server operation="all" url="file://$TOPDIR/outputs"/>
        </directory>
    </site>

    <site  handle="condorpool" arch="x86_64" os="LINUX">
        <profile namespace="pegasus" key="style" >condor</profile>
        <profile namespace="condor" key="universe" >vanilla</profile>
    </site>

</sitecatalog>
EOF


# plan and submit the  workflow
pegasus-plan \
    --conf $TOPDIR/pegasusrc \
    --sites condorpool \
    --output-site local \
    --dir $TOPDIR/dags \
    --dax $TOPDIR/dax.xml \
    --submit
